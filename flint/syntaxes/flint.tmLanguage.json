{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Flint",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#identifiers" },
    { "include": "#comments" },
    { "include": "#symbols" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#punctuation" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        { "name": "keyword.control", "match": "\\b(if|else|do|while|for|in|switch|return|break|continue|throw|catch|sync|async|spawn|lock)\\b" },
        { "name": "keyword.declaration", "match": "\\b(use|as|def|data|func|requires|entity|extends|link|enum|variant|error|test)\\b" },
        { "name": "storage.modifier", "match": "\\b(const|aligned|shared|parallel|persistent|mut)\\b" },
        { "name": "storage.type", "match": "\\b(str|fn|bp|void|bool|bool8|anyerror|u8|i32|i64|u32|u64|i32x2|i32x3|i32x4|i32x8|i64x2|i64x3|i64x4|u32x2|u32x3|u32x4|u32x8|u64x2|u64x3|u64x4|f32|f64|f32x2|f32x3|f32x4|f32x8|f64x2|f64x3|f64x4)\\b" },
        { "name": "constant.language", "match": "\\b(true|false|none)\\b" },
        { "name": "keyword", "match": "\\b(and|or|not)\\b" }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "name": "constant.character.escape", "match": "\\\\." }
          ]
        },
        {
          "name": "string.quoted.double",
          "begin": "\\$\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape", "match": "\\\\." },
            { 
              "begin": "\\{",
              "beginCaptures": {
                "0": { "name": "punctuation.section.embedded.begin.flint" }
              },
              "end": "\\}",
              "endCaptures": {
                "0": { "name": "punctuation.section.embedded.end.flint" }
              },
              "contentName": "meta.embedded.line.flint",
              "patterns": [
                { "include": "#keywords" },
                { "include": "#numbers" },
                { "include": "#identifiers" },
                { "include": "#punctuation" },
                { "include": "#symbols" },
                { "include": "#comments" },
                { "include": "#strings" }
              ]
            }
          ]
        },
        {
          "name": "string.quoted.double",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        { "name": "comment.line.double-slash", "begin": "//", "end": "$" },
        { "name": "comment.block", "begin": "/\\*\\*", "end": "\\*/" },
        { "name": "comment.line.number-sign", "match": "#[^\n]*" }
      ]
    },
    "symbols": {
      "patterns": [
        { "name": "punctuation.separator", "match": ",|;|:|\\." },
        { "name": "keyword.operator", "match": "\\+\\+|--|==|!=|<|>|<=|>=|\\+=|-=|\\*=|/=|:=|=|::|\\+|-|/|\\*\\*|\\*|<<|>>\\||\\^|&|->|\\|>|$[0-9]+|$|\\?\\." }
      ]
    },
    "identifiers": {
      "patterns": [
        { "name": "entity.name.function", "match": "\\b(?!def\\s+)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()" },
        { "name": "constant.other", "match": "\\b[A-Z_][A-Z0-9_]*\\b" },
        { "name": "entity.name.type", "match": "\\b[A-Z_][a-zA-Z0-9_]*\\b" },
        { "name": "variable.other", "match": "\\b[a-z_][a-zA-Z0-9_]*\\b" }
      ]
    },
    "numbers": {
      "name": "constant.number",
      "match": "\\b\\d+\\.?\\d*\\b"
    },
    "punctuation": {
      "name": "punctuation.brackets",
      "match": "[(){}\\[\\]]"
    }
  },
  "scopeName": "source.flint"
}
