{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Flint",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#strings" },
    { "include": "#identifiers" },
    { "include": "#comments" },
    { "include": "#symbols" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        { "name": "keyword.control", "match": "\\b(if|else|do|while|for|switch|return|break|continue|throw|catch|sync|spawn)\\b" },
        { "name": "keyword.declaration", "match": "\\b(use|def|data|func|requires|entity|link|enum|variant|error)\\b" },
        { "name": "storage.modifier", "match": "\\b(const|aligned|shared|parallel)\\b" },
        { "name": "storage.type", "match": "\\b(int|flint|dflint|bool|str|char|fn|void|Opt|int2|int3|int4|flint2|flint3|flint4|dflint2|dflint3|dflint4|bool8)\\b" },
        { "name": "constant.language", "match": "\\b(true|false|None|Some)\\b" },
        { "name": "keyword.operator", "match": "\\b(and|or|not)\\b" }
      ]
    },
    "strings": {
      "name": "string.quoted.double",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        { "name": "constant.character.escape", "match": "\\\\." }
      ]
    },
    "comments": {
      "patterns": [
        { "name": "comment.line.double-slash", "begin": "//", "end": "$" },
        { "name": "comment.block", "begin": "/\\*\\*", "end": "\\*/" },
        { "name": "comment.line.number-sign", "match": "#[^\n]*" }
      ]
    },
    "symbols": {
      "patterns": [
        { "name": "punctuation.separator", "match": ",|;|:" },
        { "name": "keyword.operator", "match": "\\+\\+|--|==|!=|<|>|<=|>=|\\+=|-=|\\*=|/=|:=|=|::|\\+|-|/|\\*\\*|\\*|<<|>>\\||\\^|&|->|\\|>" }
      ]
    },
    "identifiers": {
      "patterns": [
        { "name": "entity.name.function", "match": "\\b(?!def\\s+)([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()" },
        { "name": "constant.other", "match": "\\b[A-Z_][A-Z0-9_]*\\b" },
        { "name": "entity.name.type", "match": "\\b[A-Z_][a-zA-Z0-9_]*\\b" },
        { "name": "variable.other", "match": "\\b[a-z_][a-zA-Z0-9_]*\\b" }
      ]
    }
  },
  "scopeName": "source.flint"
}
